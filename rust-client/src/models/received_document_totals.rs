/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.32
 * Contact: info@fattureincloud.it
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ReceivedDocumentTotals {
    /// Received document total net amount
    #[serde(rename = "amount_net", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub amount_net: Option<Option<f64>>,
    /// Received document total vat amount
    #[serde(rename = "amount_vat", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub amount_vat: Option<Option<f64>>,
    /// Received document total gross amount
    #[serde(rename = "amount_gross", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub amount_gross: Option<Option<f64>>,
    /// Received document withholding tax amount
    #[serde(rename = "amount_withholding_tax", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub amount_withholding_tax: Option<Option<f64>>,
    /// Received document other withholding tax amount
    #[serde(rename = "amount_other_withholding_tax", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub amount_other_withholding_tax: Option<Option<f64>>,
    /// Received document total amount due
    #[serde(rename = "amount_due", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub amount_due: Option<Option<f64>>,
    /// Received document payments sum
    #[serde(rename = "payments_sum", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub payments_sum: Option<Option<f64>>,
}

impl ReceivedDocumentTotals {
    pub fn new() -> ReceivedDocumentTotals {
        ReceivedDocumentTotals {
            amount_net: None,
            amount_vat: None,
            amount_gross: None,
            amount_withholding_tax: None,
            amount_other_withholding_tax: None,
            amount_due: None,
            payments_sum: None,
        }
    }
}

