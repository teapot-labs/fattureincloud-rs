/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.33
 * Contact: info@fattureincloud.it
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IssuedDocumentItemsListItem {
    /// Issued document item id
    #[serde(rename = "id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub id: Option<Option<i32>>,
    /// Issued document item product id
    #[serde(rename = "product_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub product_id: Option<Option<i32>>,
    /// Issued document item product code
    #[serde(rename = "code", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub code: Option<Option<String>>,
    /// Issued document item product name
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    /// Issued document item product category
    #[serde(rename = "category", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub category: Option<Option<String>>,
    /// Issued document product description
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    /// Issued document item quantity
    #[serde(rename = "qty", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub qty: Option<Option<f64>>,
    /// Issued document item measure
    #[serde(rename = "measure", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub measure: Option<Option<String>>,
    /// Issued document item net price
    #[serde(rename = "net_price", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub net_price: Option<Option<f64>>,
    /// Issued document item gross price
    #[serde(rename = "gross_price", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub gross_price: Option<Option<f64>>,
    #[serde(rename = "vat", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub vat: Option<Option<Box<models::VatType>>>,
    /// Issued document item is not taxable
    #[serde(rename = "not_taxable", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub not_taxable: Option<Option<bool>>,
    /// Issued document item apply withholding taxes, rivalsa and cassa
    #[serde(rename = "apply_withholding_taxes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub apply_withholding_taxes: Option<Option<bool>>,
    /// Issued document item discount percentual value
    #[serde(rename = "discount", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub discount: Option<Option<f64>>,
    /// Issued document item highlight discount
    #[serde(rename = "discount_highlight", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub discount_highlight: Option<Option<bool>>,
    /// Issued document item add in delivery note
    #[serde(rename = "in_dn", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub in_dn: Option<Option<bool>>,
    /// Issued document item move stock
    #[serde(rename = "stock", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub stock: Option<Option<bool>>,
    /// Issued document advanced raw attributes for e-invoices
    #[serde(rename = "ei_raw", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub ei_raw: Option<Option<serde_json::Value>>,
}

impl IssuedDocumentItemsListItem {
    pub fn new() -> IssuedDocumentItemsListItem {
        IssuedDocumentItemsListItem {
            id: None,
            product_id: None,
            code: None,
            name: None,
            category: None,
            description: None,
            qty: None,
            measure: None,
            net_price: None,
            gross_price: None,
            vat: None,
            not_taxable: None,
            apply_withholding_taxes: None,
            discount: None,
            discount_highlight: None,
            in_dn: None,
            stock: None,
            ei_raw: None,
        }
    }
}

