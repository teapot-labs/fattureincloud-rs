/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.32
 * Contact: info@fattureincloud.it
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// IssuedDocumentEiData : Issued document e-invoice data [Only if e_invoice=true]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IssuedDocumentEiData {
    /// Vat kind [esigibilità IVA]
    #[serde(rename = "vat_kind", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub vat_kind: Option<Option<VatKind>>,
    /// Issued document original document type
    #[serde(rename = "original_document_type", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub original_document_type: Option<Option<OriginalDocumentType>>,
    /// E-invoice original document number
    #[serde(rename = "od_number", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub od_number: Option<Option<String>>,
    /// E-invoice original document date
    #[serde(rename = "od_date", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub od_date: Option<Option<String>>,
    /// E-invoice CIG
    #[serde(rename = "cig", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub cig: Option<Option<String>>,
    /// E-invoice CUP
    #[serde(rename = "cup", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub cup: Option<Option<String>>,
    /// E-invoice payment method [required for e-invoices] (see [here](https://www.fatturapa.gov.it/export/documenti/fatturapa/v1.2.2/Rappresentazione_Tabellare_FattOrdinaria_V1.2.2.pdf) for the accepted values of ModalitaPagamento)
    #[serde(rename = "payment_method", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub payment_method: Option<Option<String>>,
    /// E-invoice bank name
    #[serde(rename = "bank_name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub bank_name: Option<Option<String>>,
    /// E-invoice bank IBAN
    #[serde(rename = "bank_iban", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub bank_iban: Option<Option<String>>,
    /// E-invoice bank beneficiary
    #[serde(rename = "bank_beneficiary", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub bank_beneficiary: Option<Option<String>>,
    /// E-invoice invoice number
    #[serde(rename = "invoice_number", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub invoice_number: Option<Option<String>>,
    /// E-invoice invoice date
    #[serde(rename = "invoice_date", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub invoice_date: Option<Option<String>>,
}

impl IssuedDocumentEiData {
    /// Issued document e-invoice data [Only if e_invoice=true]
    pub fn new() -> IssuedDocumentEiData {
        IssuedDocumentEiData {
            vat_kind: None,
            original_document_type: None,
            od_number: None,
            od_date: None,
            cig: None,
            cup: None,
            payment_method: None,
            bank_name: None,
            bank_iban: None,
            bank_beneficiary: None,
            invoice_number: None,
            invoice_date: None,
        }
    }
}
/// Vat kind [esigibilità IVA]
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum VatKind {
    #[serde(rename = "null")]
    Null,
    #[serde(rename = "I")]
    I,
    #[serde(rename = "D")]
    D,
    #[serde(rename = "S")]
    S,
}

impl Default for VatKind {
    fn default() -> VatKind {
        Self::Null
    }
}
/// Issued document original document type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum OriginalDocumentType {
    #[serde(rename = "ordine")]
    Ordine,
    #[serde(rename = "contratto")]
    Contratto,
    #[serde(rename = "convenzione")]
    Convenzione,
}

impl Default for OriginalDocumentType {
    fn default() -> OriginalDocumentType {
        Self::Ordine
    }
}

