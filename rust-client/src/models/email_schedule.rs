/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.33
 * Contact: info@fattureincloud.it
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EmailSchedule {
    /// Email sender id [required if **sender_email** is not specified]
    #[serde(rename = "sender_id", skip_serializing_if = "Option::is_none")]
    pub sender_id: Option<i32>,
    /// Email sender address [required if **sender_id** is not specified]
    #[serde(rename = "sender_email", skip_serializing_if = "Option::is_none")]
    pub sender_email: Option<String>,
    /// Email recipient emails [comma separated]
    #[serde(rename = "recipient_email")]
    pub recipient_email: String,
    /// Email subject
    #[serde(rename = "subject")]
    pub subject: String,
    /// Email body [HTML Escaped] [max size 50KiB]
    #[serde(rename = "body")]
    pub body: String,
    #[serde(rename = "include")]
    pub include: Box<models::EmailScheduleInclude>,
    /// Attach the pdf of the document
    #[serde(rename = "attach_pdf")]
    pub attach_pdf: bool,
    /// Send a copy of the email to the **cc_email** specified by **Get email data**
    #[serde(rename = "send_copy")]
    pub send_copy: bool,
}

impl EmailSchedule {
    pub fn new(recipient_email: String, subject: String, body: String, include: models::EmailScheduleInclude, attach_pdf: bool, send_copy: bool) -> EmailSchedule {
        EmailSchedule {
            sender_id: None,
            sender_email: None,
            recipient_email,
            subject,
            body,
            include: Box::new(include),
            attach_pdf,
            send_copy,
        }
    }
}

