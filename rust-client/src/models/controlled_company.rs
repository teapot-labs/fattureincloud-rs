/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.33
 * Contact: info@fattureincloud.it
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ControlledCompany {
    /// Controlled company id
    #[serde(rename = "id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub id: Option<Option<i32>>,
    /// Controlled company id
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    /// Company type
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Type>,
    /// Controlled company access token Only if type=company]
    #[serde(rename = "access_token", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub access_token: Option<Option<String>>,
    #[serde(rename = "fic_license_expire", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub fic_license_expire: Option<Option<String>>,
    /// Fatture in Cloud account plan type.
    #[serde(rename = "fic_plan", skip_serializing_if = "Option::is_none")]
    pub fic_plan: Option<FicPlan>,
    /// Controlled company connection id
    #[serde(rename = "connection_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub connection_id: Option<Option<f64>>,
    /// Controlled company tax code
    #[serde(rename = "tax_code", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub tax_code: Option<Option<String>>,
}

impl ControlledCompany {
    pub fn new() -> ControlledCompany {
        ControlledCompany {
            id: None,
            name: None,
            r#type: None,
            access_token: None,
            fic_license_expire: None,
            fic_plan: None,
            connection_id: None,
            tax_code: None,
        }
    }
}
/// Company type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "company")]
    Company,
    #[serde(rename = "accountant")]
    Accountant,
}

impl Default for Type {
    fn default() -> Type {
        Self::Company
    }
}
/// Fatture in Cloud account plan type.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FicPlan {
    #[serde(rename = "trial")]
    Trial,
    #[serde(rename = "standard")]
    Standard,
    #[serde(rename = "premium")]
    Premium,
    #[serde(rename = "premium_plus")]
    PremiumPlus,
    #[serde(rename = "complete")]
    Complete,
}

impl Default for FicPlan {
    fn default() -> FicPlan {
        Self::Trial
    }
}

