/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.33
 * Contact: info@fattureincloud.it
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IssuedDocumentPreCreateInfoDefaultValues : Issued document default values
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IssuedDocumentPreCreateInfoDefaultValues {
    #[serde(rename = "default_template", skip_serializing_if = "Option::is_none")]
    pub default_template: Option<Box<models::DocumentTemplate>>,
    #[serde(rename = "dn_template", skip_serializing_if = "Option::is_none")]
    pub dn_template: Option<Box<models::DocumentTemplate>>,
    #[serde(rename = "ai_template", skip_serializing_if = "Option::is_none")]
    pub ai_template: Option<Box<models::DocumentTemplate>>,
    /// Default notes.
    #[serde(rename = "notes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub notes: Option<Option<String>>,
    /// Default rivalsa percentage.
    #[serde(rename = "rivalsa", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub rivalsa: Option<Option<f64>>,
    /// Default cassa percentage.
    #[serde(rename = "cassa", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub cassa: Option<Option<f64>>,
    /// Default withholding tax percentage.
    #[serde(rename = "withholding_tax", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub withholding_tax: Option<Option<f64>>,
    /// Default withholding tax taxable percentage.
    #[serde(rename = "withholding_tax_taxable", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub withholding_tax_taxable: Option<Option<f64>>,
    /// Default other withholding tax percentage.
    #[serde(rename = "other_withholding_tax", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub other_withholding_tax: Option<Option<f64>>,
    /// Use gross price by default.
    #[serde(rename = "use_gross_prices", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub use_gross_prices: Option<Option<bool>>,
    #[serde(rename = "payment_method", skip_serializing_if = "Option::is_none")]
    pub payment_method: Option<Box<models::PaymentMethod>>,
}

impl IssuedDocumentPreCreateInfoDefaultValues {
    /// Issued document default values
    pub fn new() -> IssuedDocumentPreCreateInfoDefaultValues {
        IssuedDocumentPreCreateInfoDefaultValues {
            default_template: None,
            dn_template: None,
            ai_template: None,
            notes: None,
            rivalsa: None,
            cassa: None,
            withholding_tax: None,
            withholding_tax_taxable: None,
            other_withholding_tax: None,
            use_gross_prices: None,
            payment_method: None,
        }
    }
}

